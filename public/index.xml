<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Julien Rineau</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Julien Rineau</description>
    <generator>Hugo -- 0.127.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Diffusion Policy for Robot Manipulation</title>
      <link>http://localhost:1313/posts/diffusion-policy/</link>
      <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/diffusion-policy/</guid>
      <description>TBD</description>
    </item>
    <item>
      <title>GPT-2 Instruction Tuning with LoRA</title>
      <link>http://localhost:1313/posts/qwen-rlhf/</link>
      <pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/qwen-rlhf/</guid>
      <description>Following my previous GPT-2 pretraining project, this is clean pipeline for fine-tuning with a &amp;ldquo;from scratch&amp;rdquo; implementation of LoRA that can be reused for other project. I&amp;rsquo;m choosing GPT-2 because I&amp;rsquo;m renting a small GPU for the experiment with a small memory but this can be reproduced with any other transformer model.
Code Repository
Dataset I used the Alpaca-GPT4 dataset from Stanford that contains 52K instruction-following data generated by GPT-4. Each row of the dataset contains an instruction, an optional input that provide context, and an output:</description>
    </item>
    <item>
      <title>GPT-2 Pretraining Implementation</title>
      <link>http://localhost:1313/posts/gpt-lightning/</link>
      <pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/gpt-lightning/</guid>
      <description>A nano-GPT implementation with Pytorch Lightning. The goal is to have a clean building block for other research projects by containing just enough manual implementation do be easily modifiable, but also by using common tools to have a painless optimized training and nice monitoring. Its contains the code to train the model, prepare the dataset and run evals. This page also details results I got training on HF&amp;rsquo;s FineWeb-Edu.
Code Repository</description>
    </item>
    <item>
      <title>U-Net Segmentation</title>
      <link>http://localhost:1313/posts/unet-segmentation/</link>
      <pubDate>Wed, 13 Sep 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/unet-segmentation/</guid>
      <description>A simple Pytroch U-net implementation. The goal is to have an clean building block that can be used in other bigger projects (e.g. Diffusion). The net is tested with a segmentation task on the MIT scene-parse-150 dataset.
Code Repository
Architechture My implementation is based on the graph above:
8 double-conv blocks with batch-norm and GELU for activation 4 skip connections </description>
    </item>
    <item>
      <title>Paper Presentations Generator</title>
      <link>http://localhost:1313/posts/paper-slides-generator/</link>
      <pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/paper-slides-generator/</guid>
      <description>A summer project in which I built an app that generate video presentations with voice of a scientific paper because keeping up with daily papers take too much time. I plan to automatically publish it on X so everyone can enjoy it but in the meantime ppl can just fork the repo and replicate run it locally.
Code Repository
The Stack The backend stack used is:
GPT4-V for paper understanding Unstructured.</description>
    </item>
    <item>
      <title>RL Policy for Robot Locomotion</title>
      <link>http://localhost:1313/posts/rl-policy/</link>
      <pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/rl-policy/</guid>
      <description>TBD</description>
    </item>
    <item>
      <title>MPC Ball Balancing Robot</title>
      <link>http://localhost:1313/posts/ball-balancing-robot/</link>
      <pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/ball-balancing-robot/</guid>
      <description>Control a ball on a plate using a robotic manipulator and a MPC controller. This project was carried out as part of the CS206B Robotic Manipulation and Interaction course at UC Berkeley
MPC Controller MPC is a type of feedback control algorithm, in which a model of the system is used to make predictions about it&amp;rsquo;s future behavior. The control inputs are then computed based on the predictions, with the goal of achieving the desired system behavior.</description>
    </item>
  </channel>
</rss>
